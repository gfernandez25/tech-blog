<article class="card card--{{id}}">
    <header class="card-header">
        <p class="card-header-title">{{title}}</p>
    </header>
    <section class="card-body">
        <form class="form form--{{id}}" id="{{id}}" onsubmit="{{submit.onsubmit}}">
            {{#each fields}}
                <label class="form-field">
                    <span class="form-field-label">{{this.title}}</span>
                    <input class="form-field-input" id="{{this.id}}" type="{{this.type}}" name="{{this.id}}" value="{{this.value}}" required>
                </label>
            {{/each}}

            <button class="form-btn-submit" type="submit">{{submit.title}}</button>

            {{#if delete}}
                <button class="form-btn-submit delete" onclick="submitDeletePost(event)" type="button">delete</button>
            {{/if}}
        </form>

        {{#if cta}}
            <a class="form-cta" href="{{cta.url}}">{{cta.title}}</a>
        {{/if}}
    </section>
</article>

<script src="/javascript/formSubmissionMethods.js"></script>

<!--
when button gets clicked
- onclick event that takes in addNewPost function

    - get all elements in form and assign to variables
        -given there is a form id,
        and you get the form by id (document.getElementById(<form-id>) )
         and call .elements method
         when get title from elements
         and get content from elements
        then assign title to a variable
        and assign content to a variable

    - get userId from session and assign to variable
        -given that a user is logged in,
        when theres is session
        and the session contains a userID
        then assign userID to variable
        -need title element

POST data to post/add-post
    -submit parameters to database
        - given title
          given content
          given userID
          and route (url),
          and method
          when submit data (fetch)
          then get response

    -on success show all user posts
        - given response
            when response returns a successful
            then navigate to all user posts page /post/dashboard

    -on failure show error message
        -given response
            when response returns a failure
            then show user error message

-->